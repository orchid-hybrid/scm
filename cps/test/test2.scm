(print (cps-program 'x))
(print (cps-program '(quote (list a b c))))
(print (cps-program '(lambda (a) a)))
(print (cps-program '(lambda (a b) a)))
(print (cps-program '(lambda (a b) b)))
(print (cps-program '(lambda (a b c) a)))
(print (cps-program '(lambda (a b c) b)))
(print (cps-program '(lambda (a b c) c)))
(print (cps-program '(begin a)))
(print (cps-program '(begin a b)))
(print (cps-program '(begin (a) b)))
(print (cps-program '(begin a b c)))
(print (cps-program '(lambda (a b c) a b c)))
(print (cps-program '(f)))
(print (cps-program '(f x)))
(print (cps-program '(f x y)))
(print (cps-program '(f x y z)))
(print (cps-program '(f (begin a b) (begin s t) (u v))))
(print (cps-program '(f (a b) (begin s t) (u v))))
(print ;; testing the above expansion
(list
 (let ((f (lambda (a b c) (list a a a b b c)))
       (a (lambda (x) (+ x 1)))
       (b 3)
       (s #f)
       (t #t)
       (u (lambda (y) (* 7 y)))
       (v 2)
       (halt (lambda (i) i)))
   (f (a b) (begin s t) (u v)))
 (let ((f (lambda (k a b c) (k (list a a a b b c))))
       (a (lambda (k x) (k (+ x 1))))
       (b 3)
       (s #f)
       (t #t)
       (u (lambda (k y) (k (* 7 y))))
       (v 2)
       (halt (lambda (i) i)))
   ((lambda (r6) ((lambda (r8) ((lambda (p14) (r8 (lambda (p10) ((lambda (ig7) ((lambda (p11) ((lambda (r7) ((lambda (p13) (r7 (lambda (p12) (r6 halt p10 p11 p12)) p13)) v)) u)) t)) s)) p14)) b)) a)) f))))

(exit)

